{"version":3,"sources":["main.js"],"names":[],"mappingsfile":"app.js","sourcesContent":["let btnEncryptionToggle = document.querySelector(\".encryption_toggle\");\r\nlet formEncription = document.querySelector(\".encryption_form\");\r\nlet encryptionInputText = document.querySelector(\".encryption_input-text\");\r\nlet encryptionInputFile = document.querySelector(\".encryption_input-file\");\r\nlet encryptionBtnKey = document.querySelector(\".encryption_btn--key\");\r\nlet encryptionBtnBack = document.querySelector(\".encryption_btn--back\");\r\n\r\nlet encryptionData = {\r\n  operation: \"\",\r\n  text: \"\",\r\n  picture: \"\",\r\n  picture_length: \"\",\r\n  picture_type: \"\",\r\n}\r\nlet toggleTypeEncryption = function() {\r\n  toggleTypeEncryptionClass();\r\n  cleanEncryptionForm();\r\n  removeUploadedPic();\r\n}\r\n\r\nlet toggleTypeEncryptionClass = function() {\r\n  formEncription.classList.toggle(\"encryption_form--encrypt\");\r\n  formEncription.classList.toggle(\"encryption_form--decipher\");\r\n}\r\n\r\nlet cleanEncryptionForm = function() {\r\n  encryptionInputText.value = \"\";\r\n  encryptionInputFile.value = \"\";\r\n}\r\n\r\nlet showUploadedPic = function(evt) {\r\n  if (encryptionInputFile.value != \"\") {\r\n    formEncription.classList.add(\"encryption_form--uploaded\");\r\n  }\r\n\r\n  let reader = new FileReader();\r\n\r\n  reader.onload = function(e) {\r\n\r\n    var img = document.createElement('img');\r\n\r\n    img.onload = function() {\r\n      console.log(this.width+'x'+this.height);\r\n    };\r\n\r\n    img.src = e.target.result;\r\n  }\r\n}\r\nlet removeUploadedPic = function() {\r\n  formEncription.classList.remove(\"encryption_form--uploaded\");\r\n}\r\nlet getPic = function() {\r\n  let reader = new FileReader();\r\n  reader.readAsDataURL(encryptionInputFile.files[0])\r\n\r\n  let createImg = function(evt) {\r\n    let img = document.createElement('img');\r\n\r\n    encryptionData.picture = evt.target.result;\r\n\r\n    img.src = evt.target.result;\r\n    img.className = \"encryption_input-img\";\r\n    document.querySelector(\".encryption_input-img-wrap\").append(img);\r\n    encryptionData.picture_type = img.src.slice(img.src.indexOf(\"/\") + 1, img.src.indexOf(\";\"));\r\n\r\n    let showSize = function() {\r\n      encryptionData.picture_length = img.width * img.height;\r\n    };\r\n\r\n    img.addEventListener(\"load\", showSize);\r\n  }\r\n\r\n  reader.addEventListener(\"load\", createImg);\r\n}\r\nlet updateSrcImg = function(newSrc) {\r\n  goNextStep();\r\n  document.querySelector('.encryption_form').classList.add(\"encryption_form--updated\");\r\n  document.querySelector('.encryption_input-img').src = newSrc;\r\n}\r\nlet showText = function(text) {\r\n  goNextStep();\r\n  document.querySelector('.encryption_input-text').value = text;\r\n}\r\nlet tapEncryptionBtnKey = function(evt) {\r\n  evt.preventDefault();\r\n\r\n  if (getTypeEncryption() == 'encrypt') {\r\n    if (getStepEncryption() == 1) {\r\n      goNextStep();\r\n    } else {\r\n      encryptionData.operation = 'encrypt';\r\n      encryptionData.text = encryptionInputText.value;\r\n      let cookie = document.cookie;\r\n      let csrfToken = cookie.substring(cookie.indexOf('=') + 1);\r\n      fetch(\r\n        // '/req',\r\n        'https://jsonplaceholder.typicode.com/posts',\r\n        {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n            'X-Requested-With' : 'XMLHttpRequest',\r\n            'X-CSRFToken': csrfToken\r\n          },\r\n          body: JSON.stringify(encryptionData),\r\n        })\r\n        .then((response) => response.json())\r\n        .then((json) => updateSrcImg(json.picture));\r\n    }\r\n  }\r\n  if (getTypeEncryption() == 'decipher') {\r\n    encryptionData.operation = 'decipher';\r\n    delete encryptionData.text;\r\n    let cookie = document.cookie;\r\n    let csrfToken = cookie.substring(cookie.indexOf('=') + 1);\r\n    fetch(\r\n      // '/req',\r\n      'https://jsonplaceholder.typicode.com/posts',\r\n      {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'X-CSRFToken': csrfToken\r\n        },\r\n        body: JSON.stringify(encryptionData),\r\n      })\r\n      .then((response) => response.json())\r\n      .then((json) => showText(json.picture_length));\r\n  }\r\n}\r\n\r\nlet getTypeEncryption = function() {\r\n  if (formEncription.classList.contains('encryption_form--encrypt')) {\r\n    return 'encrypt';\r\n  }\r\n  return 'decipher';\r\n}\r\nlet getStepEncryption = function() {\r\n  if (formEncription.classList.contains('encryption_form--step-1')) {\r\n    return 1;\r\n  }\r\n  return 2;\r\n}\r\n\r\nlet goNextStep = function() {\r\n  numberStep = +formEncription.className.split(\"encryption_form--step-\")[1][0];\r\n\r\n  formEncription.classList.remove(\"encryption_form--step-1\");\r\n  formEncription.classList.remove(\"encryption_form--step-2\");\r\n  formEncription.classList.add(`encryption_form--step-${numberStep + 1}`);\r\n}\r\nlet goPreviousStep = function() {\r\n  numberStep = +formEncription.className.split(\"encryption_form--step-\")[1][0];\r\n\r\n  formEncription.classList.remove(\"encryption_form--step-3\");\r\n  formEncription.classList.remove(\"encryption_form--step-2\");\r\n  formEncription.classList.add(`encryption_form--step-${numberStep - 1}`);\r\n}\r\n\r\n\r\n\r\nbtnEncryptionToggle.addEventListener(\"click\", toggleTypeEncryption);\r\nencryptionInputFile.addEventListener(\"change\", showUploadedPic);\r\nencryptionInputFile.addEventListener(\"change\", getPic);\r\nencryptionBtnKey.addEventListener(\"click\", tapEncryptionBtnKey);\r\nencryptionBtnBack.addEventListener(\"click\", goPreviousStep);\r\n\r\n\r\n//раздел info\r\n\r\nlet info = document.querySelector('.info');\r\nlet infoHowEncrypt = info.querySelector('.info_how--encrypt');\r\nlet schemeEncrypt = infoHowEncrypt.querySelector('.info_how-scheme');\r\nlet schemeEncryptIcons = schemeEncrypt.querySelectorAll('.info_how-scheme-icon');\r\nlet schemeEncryptIconsArr = Array.from(schemeEncryptIcons);\r\nlet schemeEncryptTexts = infoHowEncrypt.querySelectorAll('.info_how-text');\r\nlet schemeEncryptTextsArr = Array.from(schemeEncryptTexts);\r\n\r\nschemeEncrypt.addEventListener('click', function(event) {\r\n  let icon = event.target.closest(\".info_how-scheme-icon\");\r\n\r\n  if (icon) {\r\n    for (let icon of schemeEncryptIconsArr) {\r\n      icon.classList.remove(\"info_how-scheme-icon--active\");\r\n    }\r\n    icon.classList.add(\"info_how-scheme-icon--active\");\r\n\r\n    let iconNum = icon.dataset.count;\r\n\r\n    for (let text of schemeEncryptTextsArr) {\r\n      text.classList.remove(\"info_how-text--active\");\r\n    }\r\n    infoHowEncrypt.querySelector(`.info_how-text--${iconNum}`).classList.add(\"info_how-text--active\");\r\n  }\r\n});\r\n\r\nlet infoHowDecipher = info.querySelector('.info_how--decipher');\r\nlet schemeDecipher = infoHowDecipher.querySelector('.info_how-scheme');\r\nlet schemeDecipherIcons = schemeDecipher.querySelectorAll('.info_how-scheme-icon');\r\nlet schemeDecipherIconsArr = Array.from(schemeDecipherIcons);\r\nlet schemeDecipherTexts = infoHowDecipher.querySelectorAll('.info_how-text');\r\nlet schemeDecipherTextsArr = Array.from(schemeDecipherTexts);\r\n\r\nschemeDecipher.addEventListener('click', function(event) {\r\n  let icon = event.target.closest(\".info_how-scheme-icon\");\r\n\r\n  if (icon) {\r\n    for (let icon of schemeDecipherIconsArr) {\r\n      icon.classList.remove(\"info_how-scheme-icon--active\");\r\n    }\r\n    icon.classList.add(\"info_how-scheme-icon--active\");\r\n\r\n    let iconNum = icon.dataset.count;\r\n\r\n    for (let text of schemeDecipherTextsArr) {\r\n      text.classList.remove(\"info_how-text--active\");\r\n    }\r\n    infoHowDecipher.querySelector(`.info_how-text--${iconNum}`).classList.add(\"info_how-text--active\");\r\n  }\r\n});\r\n\r\n//# sourceMappingURL=app.js.map\r\n"]}